var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.209,1,2.333]],["body/controllers/AppController.html",[0,1.78,1,3.435,2,1.353,3,0.246,4,0.214,5,0.214,6,3.284,7,0.497,8,1.672,9,4.32,10,3.869,11,5.128,12,1.353,13,0.024,14,2.611,15,3.132,16,4.32,17,3.435,18,5.089,19,0.625,20,3.869,21,1.271,22,0.932,23,0.538,24,0.992,25,5.687,26,1.271,27,0.542,28,0.768,29,2.881,30,2.19,31,1.056,32,3.284,33,3.219,34,3.284,35,3.869,36,0.246,37,0.156,38,1.441,39,1.441,40,2.19,41,3.869,42,1.883,43,3.284,44,3.869,45,3.869,46,1.271,47,3.869,48,0.017,49,0.017]],["title/modules/AppModule.html",[50,1.136,51,2.333]],["body/modules/AppModule.html",[1,3.565,2,1.614,3,0.213,4,0.185,5,0.185,13,0.024,27,0.587,28,0.664,33,3.496,34,2.84,36,0.213,37,0.135,48,0.016,49,0.016,50,1.516,51,4.697,52,1.419,53,1.957,54,2.84,55,2.84,56,2.84,57,3.801,58,3.801,59,2.619,60,3.801,61,3.801,62,3.801,63,2.246,64,1.628,65,1.628,66,3.346,67,2.416,68,2.612,69,3.346,70,3.346,71,3.346,72,3.346,73,3.346,74,3.346,75,3.346]],["title/injectables/AppService.html",[33,1.956,76,0.943]],["body/injectables/AppService.html",[3,0.277,4,0.241,5,0.241,7,0.56,8,1.804,9,4.661,13,0.024,16,4.661,19,0.703,21,1.43,22,1.049,23,0.606,24,1.116,26,1.43,27,0.39,28,0.864,33,3.108,36,0.277,37,0.175,43,4.661,46,1.43,48,0.019,49,0.019,76,1.498,77,1.975,78,3.695,79,5.491,80,1.568,81,4.354,82,5.491,83,3.695,84,4.354,85,4.354]],["title/controllers/AuthController.html",[0,1.209,86,2.333]],["body/controllers/AuthController.html",[0,1.082,2,1.082,3,0.197,4,0.171,5,0.171,7,0.398,8,1.436,12,1.528,13,0.024,19,0.706,21,1.436,22,1.053,23,0.608,24,1.121,26,1.436,27,0.567,28,0.614,29,2.867,30,1.752,31,0.844,36,0.197,37,0.125,38,1.153,39,1.153,40,2.473,46,1.436,48,0.015,49,0.015,86,2.949,87,2.627,88,1.905,89,3.095,90,4.124,91,4.37,92,2.627,93,3.708,94,3.095,95,4.37,96,4.37,97,2.949,98,4.37,99,2.69,100,4.37,101,3.095,102,2.473,103,3.095,104,2.212,105,3.095,106,4.37,107,2.473,108,2.473,109,3.709,110,3.095,111,3.095,112,1.905,113,2.088,114,2.088,115,2.69,116,1.905,117,1.905,118,1.153,119,1.905,120,2.088,121,2.867,122,2.627,123,1.905,124,2.627,125,2.627,126,2.627,127,2.088,128,3.095,129,2.627,130,3.095,131,3.095,132,3.095,133,3.095,134,3.095,135,1.905,136,3.095,137,1.905,138,3.095]],["title/modules/AuthModule.html",[50,1.136,57,2.127]],["body/modules/AuthModule.html",[2,1.728,3,0.235,4,0.205,5,0.205,13,0.024,27,0.583,28,0.735,36,0.235,37,0.149,48,0.017,49,0.017,50,1.624,52,1.57,53,2.096,57,4.156,59,2.699,63,2.405,64,1.801,65,1.801,67,2.588,68,2.797,86,3.755,118,1.379,121,3.602,122,3.142,139,3.142,140,3.702,141,3.142,142,3.917,143,3.702,144,3.702,145,2.278,146,3.702,147,2.774,148,2.278,149,3.702,150,2.278,151,1.801,152,3.702,153,3.702,154,3.142,155,3.702,156,3.702,157,3.702]],["title/injectables/AuthService.html",[76,0.943,121,1.956]],["body/injectables/AuthService.html",[3,0.208,4,0.181,5,0.181,7,0.42,8,1.491,13,0.024,19,0.733,21,1.491,22,1.093,23,0.631,24,1.164,26,1.073,27,0.55,28,0.649,36,0.208,37,0.131,38,1.217,39,1.691,42,2.538,46,1.073,48,0.015,49,0.015,76,1.239,77,1.482,90,3.401,92,3.853,93,3.773,102,2.569,104,1.824,121,2.569,123,2.011,124,2.773,125,2.773,126,2.773,147,2.448,158,2.773,159,2.732,160,1.849,161,1.849,162,2.239,163,6.288,164,3.267,165,2.209,166,3.267,167,2.773,168,3.401,169,1.849,170,2.773,171,2.732,172,1.849,173,2.377,174,3.267,175,2.569,176,2.209,177,4.539,178,4.539,179,3.401,180,4.539,181,4.539,182,3.267,183,3.401,184,1.482,185,2.773,186,3.267]],["title/classes/CreateOrderDto.html",[37,0.139,187,2.127]],["body/classes/CreateOrderDto.html",[3,0.219,4,0.191,5,0.191,7,0.443,12,1.648,13,0.024,17,3.18,19,0.761,23,0.867,27,0.517,31,0.941,36,0.219,37,0.216,48,0.016,49,0.016,107,2.667,187,2.9,188,1.065,189,4.021,190,2.928,191,1.548,192,3.303,193,5.367,194,3.716,195,3.45,196,3.45,197,4.712,198,3.18,199,3.531,200,4.712,201,4.712,202,4,203,4.322,204,2.123,205,3.45,206,2.293,207,2.928,208,4,209,3.531,210,4.712,211,4.712,212,4.712,213,2.468,214,3.18,215,3.45,216,2.811,217,2.928,218,4,219,3.531,220,2.928,221,4.712,222,1.806,223,1.206,224,1.806,225,2.123,226,1.755,227,3.45,228,2.585]],["title/classes/CreateOrderProductDto.html",[37,0.139,194,2.127]],["body/classes/CreateOrderProductDto.html",[3,0.218,4,0.19,5,0.19,7,0.442,12,1.874,13,0.024,19,0.865,23,0.745,27,0.422,31,0.938,36,0.218,37,0.189,48,0.016,49,0.016,80,1.387,99,2.894,188,1.062,189,4.316,191,1.545,194,2.894,203,3.523,206,2.288,207,2.919,213,3.261,214,3.173,216,3.017,218,3.991,219,3.523,220,3.991,222,1.801,224,3.017,226,2.32,229,2.321,230,4.548,231,4.548,232,2.577,233,4.702,234,4.316,235,4.702,236,4.702,237,3.439,238,3.439,239,1.545,240,4.702,241,4.702,242,4.702,243,4.702,244,4.702,245,2.919,246,4.702,247,4.702,248,3.439,249,3.173]],["title/classes/CreateProductDto.html",[37,0.139,250,1.956]],["body/classes/CreateProductDto.html",[3,0.189,4,0.164,5,0.164,7,0.382,12,1.89,13,0.023,19,0.872,22,1.193,23,0.752,27,0.381,31,0.811,36,0.189,37,0.171,48,0.014,49,0.014,80,1.432,99,2.613,188,0.917,191,1.395,206,2.066,213,3.277,216,2.993,222,1.556,226,2.279,229,2.005,232,3.18,234,4.689,245,2.522,249,3.343,250,2.403,251,4.852,252,2.594,253,3.343,254,4.245,255,3.603,256,4.587,257,4.587,258,3.603,259,3.603,260,3.603,261,3.603,262,3.603,263,2.971,264,2.522,265,3.603,266,3.603,267,3.603,268,5.312,269,3.603,270,3.603,271,3.603,272,3.603,273,3.603,274,3.603,275,3.603,276,2.971,277,3.603,278,2.971,279,2.971,280,4.245,281,3.603,282,2.971,283,3.603,284,3.603,285,2.971,286,2.522]],["title/classes/CreateTableDto.html",[37,0.139,287,1.956]],["body/classes/CreateTableDto.html",[3,0.274,4,0.239,5,0.239,7,0.555,12,1.511,13,0.024,17,3.687,19,0.697,23,0.601,27,0.49,31,1.179,36,0.274,37,0.22,48,0.018,49,0.018,107,3.093,188,1.334,191,1.795,206,3.161,208,4.638,209,4.094,213,2.861,214,3.687,216,2.861,219,4.094,222,2.262,226,1.609,283,4.638,287,3.093,288,4.638,289,3.237,290,4.32,291,4.32]],["title/classes/CreateUserDto.html",[37,0.139,292,1.956]],["body/classes/CreateUserDto.html",[3,0.172,4,0.15,5,0.15,7,0.348,12,1.926,13,0.023,17,2.676,19,0.889,22,1.131,23,0.766,27,0.356,31,0.738,36,0.172,37,0.16,48,0.013,49,0.013,80,1.524,90,3.875,99,3.542,108,2.927,171,2.459,172,2.658,179,4.57,188,0.835,191,1.303,213,3.313,216,3.014,222,1.416,226,2.051,232,2.971,249,3.49,252,2.459,264,2.295,265,3.366,277,4.39,284,3.366,292,2.244,293,4.885,294,2.026,295,4.695,296,2.295,297,3.965,298,5.172,299,5.172,300,3.965,301,3.875,302,2.704,303,3.965,304,3.366,305,3.366,306,3.366,307,3.366,308,2.704,309,3.965,310,3.965,311,5.172,312,3.965,313,3.366,314,2.704,315,3.965,316,3.965,317,3.366,318,2.704,319,2.704,320,3.965,321,3.965,322,3.965,323,3.965,324,2.704,325,2.704,326,2.704,327,2.704,328,2.704,329,2.704,330,2.704]],["title/injectables/JwtStrategy.html",[76,0.943,142,2.127]],["body/injectables/JwtStrategy.html",[3,0.22,4,0.191,5,0.191,7,0.445,8,1.551,13,0.024,19,0.762,21,1.551,22,1.137,23,0.803,24,1.211,26,1.137,27,0.518,28,0.687,36,0.22,37,0.139,38,1.289,39,1.289,42,1.684,46,1.137,48,0.016,49,0.016,76,1.289,77,1.57,80,0.833,104,1.88,108,1.959,109,2.937,118,1.289,142,2.906,151,1.684,154,2.937,159,2.815,160,1.959,161,1.959,162,2.294,165,2.298,167,4.008,169,1.959,171,2.473,173,1.812,175,1.959,176,1.684,183,2.593,184,1.57,331,2.937,332,4.722,333,3.46,334,4.722,335,4.722,336,3.46,337,3.46,338,3.46,339,3.46,340,3.46,341,3.46,342,2.937,343,2.13,344,3.46,345,3.46,346,3.46,347,3.46,348,3.46,349,2.937,350,3.46,351,2.937,352,3.46,353,3.187,354,3.46,355,3.46]],["title/classes/LoginDto.html",[37,0.139,93,2.127]],["body/classes/LoginDto.html",[3,0.256,4,0.223,5,0.223,7,0.517,12,1.826,13,0.024,19,0.843,23,0.726,27,0.468,31,1.098,36,0.256,37,0.21,48,0.018,49,0.018,80,1.477,93,3.213,108,3.472,171,3.328,172,3.28,179,3.911,188,1.242,191,1.715,213,3.212,216,3.035,222,2.107,226,1.945,249,3.911,301,3.911,356,3.415,357,5.221,358,5.221,359,4.023,360,4.023,361,5.796]],["title/classes/LoginResponseDto.html",[37,0.139,123,2.127]],["body/classes/LoginResponseDto.html",[3,0.257,4,0.223,5,0.223,7,0.519,12,1.83,13,0.024,19,0.845,23,0.728,27,0.469,31,1.102,36,0.257,37,0.162,48,0.018,49,0.018,80,1.26,104,2.28,108,2.962,120,2.725,123,3.221,151,2.546,185,4.928,188,1.247,191,1.719,213,2.74,216,3.04,226,1.949,239,1.719,296,4.442,362,4.928,363,3.427,364,5.233,365,3.921,366,5.233,367,4.038,368,5.233,369,5.233,370,4.038]],["title/classes/Order.html",[37,0.139,224,1.81]],["body/classes/Order.html",[3,0.239,4,0.208,5,0.208,7,0.484,13,0.024,19,1.032,23,0.89,24,1.763,27,0.503,36,0.239,37,0.151,48,0.017,49,0.017,80,1.204,104,2.236,120,2.541,188,1.163,191,1.642,192,3.453,224,2.617,239,1.843,371,3.195,372,3.453,373,3.112,374,3.453,375,4.034,376,3.765,377,3.765,378,2.73,379,3.765,380,3.765,381,3.765,382,3.765,383,3.765,384,3.765]],["title/controllers/OrderController.html",[0,1.209,385,2.333]],["body/controllers/OrderController.html",[0,1.044,2,1.044,3,0.19,4,0.165,5,0.165,7,0.384,8,1.4,12,1.737,13,0.024,14,2.016,15,2.623,19,0.802,21,1.4,22,1.026,23,0.593,24,1.093,26,1.632,27,0.55,28,0.593,29,3.066,30,1.691,31,0.815,36,0.19,37,0.12,38,1.112,39,1.112,40,2.812,46,1.632,48,0.014,49,0.014,80,1.197,88,1.838,97,3.656,104,2.083,112,2.623,115,2.623,116,1.838,117,1.838,118,1.112,119,1.838,120,2.016,127,2.016,129,2.535,135,1.838,137,1.838,187,3.857,199,3.193,203,4.462,223,1.49,224,1.564,239,1.4,385,2.876,386,2.535,387,2.636,388,2.074,389,2.987,390,2.016,391,2.876,392,2.987,393,3.193,394,3.617,395,2.987,396,1.453,397,2.238,398,2.987,399,2.016,400,2.238,401,1.453,402,2.535,403,2.812,404,2.535,405,2.987,406,2.987,407,2.987,408,2.987,409,2.987,410,2.016,411,2.016,412,2.987]],["title/modules/OrderModule.html",[50,1.136,58,2.127]],["body/modules/OrderModule.html",[2,1.834,3,0.257,4,0.224,5,0.224,13,0.024,27,0.571,28,0.804,36,0.257,37,0.163,48,0.018,49,0.018,50,1.723,52,1.719,53,2.224,58,4.143,59,2.767,63,2.552,64,1.972,65,1.972,67,2.747,68,2.969,118,1.509,145,2.494,148,2.494,150,2.494,151,1.972,385,3.925,403,3.694,404,3.44,413,3.44,414,3.44,415,4.052,416,4.052,417,4.052]],["title/injectables/OrderService.html",[76,0.943,403,1.956]],["body/injectables/OrderService.html",[3,0.135,4,0.118,5,0.118,7,0.274,8,1.088,13,0.025,19,0.801,21,1.505,22,1.402,23,0.637,24,1.175,26,1.505,27,0.445,28,0.423,36,0.135,37,0.086,38,0.793,39,0.793,42,1.976,46,1.334,48,0.011,49,0.011,76,0.903,77,0.966,80,1.265,104,1.602,160,1.205,161,1.205,162,1.819,165,1.976,169,1.205,175,1.205,176,1.036,187,3.374,192,2.819,194,1.311,204,2.038,206,2.229,223,1.42,224,1.115,225,1.311,226,1.513,228,4.858,230,1.808,231,2.81,239,1.726,252,1.115,253,1.437,373,2.229,378,1.611,387,2.229,388,1.611,396,1.611,401,1.611,402,1.808,403,1.874,418,1.808,419,2.234,420,2.13,421,3.311,422,2.13,423,3.311,424,2.13,425,2.13,426,2.234,427,3.091,428,2.13,429,2.234,430,1.596,431,2.741,432,2.13,433,3.311,434,2.13,435,2.13,436,2.13,437,2.13,438,2.13,439,2.13,440,2.13,441,5.295,442,1.437,443,2.13,444,2.13,445,2.13,446,2.13,447,1.437,448,1.437,449,2.741,450,1.437,451,1.437,452,1.808,453,1.437,454,1.437,455,1.437,456,1.437,457,1.437,458,1.437]],["title/modules/PrismaModule.html",[50,1.136,59,1.466]],["body/modules/PrismaModule.html",[3,0.279,4,0.243,5,0.243,13,0.024,27,0.495,28,0.871,36,0.279,37,0.177,48,0.019,49,0.019,50,1.813,52,1.861,53,2.34,59,2.868,63,2.685,64,2.135,65,2.135,67,2.89,162,2.791,459,3.725,460,3.725,461,3.725,462,4.388,463,5.518,464,4.388]],["title/injectables/PrismaService.html",[76,0.943,162,1.373]],["body/injectables/PrismaService.html",[3,0.254,4,0.221,5,0.221,7,0.513,8,1.707,13,0.024,19,0.839,21,1.312,22,0.962,23,0.556,24,1.024,26,1.707,27,0.466,28,0.793,36,0.254,37,0.161,48,0.018,49,0.018,76,1.418,77,1.812,159,3.466,162,2.064,173,2.721,343,3.198,430,2.993,465,3.39,466,4.902,467,5.196,468,6.5,469,5.196,470,6.117,471,3.994,472,3.39,473,3.994,474,3.994,475,3.994,476,3.994,477,3.994]],["title/classes/Product.html",[37,0.139,378,1.682]],["body/classes/Product.html",[3,0.249,4,0.217,5,0.217,7,0.504,13,0.023,19,1.064,22,1.379,23,0.917,24,1.659,36,0.249,37,0.158,48,0.017,49,0.017,80,1.61,188,1.212,191,1.687,206,2.499,226,2.133,239,1.881,252,2.999,253,3.864,372,3.524,374,3.524,375,4.1,378,2.499,478,3.331,479,3.924,480,3.924,481,3.924,482,3.924,483,3.924,484,3.924,485,3.924]],["title/controllers/ProductController.html",[0,1.209,486,2.333]],["body/controllers/ProductController.html",[0,0.868,2,0.868,3,0.158,4,0.137,5,0.137,7,0.319,8,1.222,12,1.858,13,0.024,14,1.674,15,2.29,19,0.858,21,1.629,22,1.194,23,0.69,24,1.272,26,1.745,27,0.5,28,0.492,29,3.157,30,1.404,31,0.677,36,0.158,37,0.1,38,0.924,39,0.924,40,3.007,46,1.629,48,0.013,49,0.013,80,1.465,88,1.527,97,3.764,112,2.29,113,1.674,114,1.674,115,2.29,116,1.527,117,1.527,118,0.924,119,1.527,135,1.527,137,1.527,184,2.025,202,3.158,223,1.301,225,2.29,234,4.457,239,2.094,250,3.157,365,4.179,378,1.207,387,2.413,388,1.81,390,1.674,391,2.51,396,1.207,397,1.859,399,1.674,401,1.207,410,1.674,411,1.674,486,2.51,487,2.106,488,1.948,489,2.106,490,2.481,491,1.404,492,2.106,493,3.158,494,2.481,495,1.859,496,3.72,497,2.481,498,2.481,499,1.404,500,3.661,501,2.106,502,3.72,503,2.481,504,1.859,505,2.526,506,2.106,507,1.404,508,2.481,509,2.481,510,1.859,511,2.481,512,2.481,513,2.481,514,1.859,515,1.859,516,2.481,517,1.859,518,1.859,519,1.859,520,2.481]],["title/modules/ProductModule.html",[50,1.136,60,2.127]],["body/modules/ProductModule.html",[2,1.834,3,0.257,4,0.224,5,0.224,13,0.024,27,0.571,28,0.804,36,0.257,37,0.163,48,0.018,49,0.018,50,1.723,52,1.719,53,2.224,59,2.767,60,4.143,63,2.552,64,1.972,65,1.972,67,2.747,68,2.969,118,1.509,145,2.494,148,2.494,150,2.494,151,1.972,486,3.925,505,3.694,506,3.44,521,3.44,522,4.052,523,3.44,524,4.052,525,4.052]],["title/injectables/ProductService.html",[76,0.943,505,1.956]],["body/injectables/ProductService.html",[3,0.145,4,0.126,5,0.126,7,0.293,8,1.147,13,0.024,19,0.936,21,1.847,22,1.354,23,0.782,24,1.441,26,1.847,27,0.459,28,0.453,36,0.145,37,0.092,38,0.85,39,0.85,42,2.492,46,1.683,48,0.012,49,0.012,76,0.953,77,1.036,80,1.507,102,3.433,107,1.292,159,3.276,160,1.292,161,1.292,162,1.887,165,1.699,169,1.292,173,2.488,175,1.977,176,1.699,184,1.585,198,1.54,204,2.149,223,1.221,225,2.149,239,1.905,250,3.057,353,1.54,378,1.699,387,2.312,388,1.699,396,1.699,401,1.111,419,2.357,426,2.357,427,3.207,429,2.357,431,2.863,442,1.54,447,1.54,448,1.54,449,2.357,450,1.54,451,1.54,453,1.54,454,1.54,455,1.54,456,1.54,457,1.54,458,1.54,488,1.829,489,2.964,491,1.977,499,1.977,500,3.568,505,1.977,507,1.292,526,1.937,527,2.617,528,2.282,529,2.282,530,2.282,531,2.282,532,2.617,533,2.282,534,2.282,535,2.282,536,2.282,537,1.71,538,2.282,539,2.282,540,3.178,541,2.282,542,1.937,543,1.71,544,3.178,545,2.282,546,1.71,547,2.282,548,2.282,549,1.937]],["title/classes/Table.html",[37,0.139,373,1.682]],["body/classes/Table.html",[3,0.271,4,0.236,5,0.236,7,0.549,13,0.024,19,1.013,23,0.872,24,1.697,36,0.271,37,0.172,48,0.018,49,0.018,80,1.306,188,1.319,191,1.782,206,3.15,239,1.958,372,3.669,373,2.639,374,3.669,375,4.232,550,3.624,551,4.27,552,4.27,553,4.27,554,4.27,555,4.27]],["title/controllers/TableController.html",[0,1.209,556,2.333]],["body/controllers/TableController.html",[0,0.847,2,0.847,3,0.154,4,0.134,5,0.134,7,0.311,8,1.2,12,1.838,13,0.024,14,1.634,15,2.248,19,0.849,21,1.609,22,1.18,23,0.681,24,1.256,26,1.727,27,0.514,28,0.481,29,3.128,30,1.371,31,0.661,36,0.154,37,0.097,38,0.902,39,0.902,40,2.976,46,1.609,48,0.012,49,0.012,80,1.456,88,1.49,102,3.342,112,2.248,113,1.634,114,1.634,115,2.248,116,1.49,117,1.49,118,0.902,119,1.49,135,1.49,137,1.49,184,1.996,209,4.424,223,1.277,239,2.023,287,2.773,365,3.67,373,1.778,387,2.384,388,1.778,390,1.634,391,2.465,393,2.737,396,1.178,397,1.814,399,1.634,401,1.178,410,1.634,411,1.634,488,1.913,491,1.371,492,2.055,495,1.814,499,1.371,501,2.055,504,1.814,507,1.371,510,1.814,514,1.814,515,1.814,517,1.814,518,1.814,519,1.814,556,2.465,557,2.055,558,1.814,559,5.527,560,2.421,561,4.141,562,3.653,563,2.421,564,3.653,565,3.653,566,2.421,567,2.421,568,3.015,569,3.101,570,2.421,571,2.737,572,2.055,573,2.49,574,2.055,575,2.421,576,2.421,577,2.421,578,2.421,579,2.421,580,2.421,581,2.421]],["title/modules/TableModule.html",[50,1.136,61,2.127]],["body/modules/TableModule.html",[2,1.834,3,0.257,4,0.224,5,0.224,13,0.024,27,0.571,28,0.804,36,0.257,37,0.163,48,0.018,49,0.018,50,1.723,52,1.719,53,2.224,59,2.767,61,4.143,63,2.552,64,1.972,65,1.972,67,2.747,68,2.969,118,1.509,145,2.494,148,2.494,150,2.494,151,1.972,556,3.925,573,3.694,574,3.44,582,3.44,583,3.44,584,4.052,585,4.052,586,4.052]],["title/injectables/TableService.html",[76,0.943,573,1.956]],["body/injectables/TableService.html",[3,0.141,4,0.122,5,0.122,7,0.285,8,1.121,13,0.024,19,0.927,21,1.827,22,1.339,23,0.774,24,1.426,26,1.827,27,0.479,28,0.44,36,0.141,37,0.089,38,0.825,39,0.825,42,2.458,46,1.66,48,0.012,49,0.012,76,0.931,77,1.005,80,1.496,102,3.405,107,1.253,159,3.085,160,1.253,161,1.253,162,1.858,165,1.66,169,1.253,173,2.449,175,1.931,176,1.66,184,1.889,198,1.494,204,2.1,223,1.193,239,1.935,287,2.647,353,1.494,373,1.66,387,2.276,388,1.66,396,1.66,401,1.078,419,2.303,426,2.303,427,3.156,429,2.303,431,3.156,442,2.303,447,1.494,448,1.494,449,2.303,450,1.494,451,1.494,453,1.494,454,1.494,455,1.494,456,1.494,457,1.494,458,1.494,488,1.787,491,1.931,499,1.931,507,1.253,527,2.556,532,2.556,537,1.659,540,3.119,543,1.659,544,3.119,546,1.659,558,2.556,561,3.998,568,2.879,571,2.556,572,1.88,573,1.931,587,1.88,588,2.214,589,2.214,590,2.214,591,2.214,592,2.214,593,2.214,594,2.214,595,2.214,596,2.214,597,1.88,598,2.214,599,2.214,600,2.214,601,2.214,602,2.214,603,2.214]],["title/classes/UpdateProductDto.html",[37,0.139,500,2.127]],["body/classes/UpdateProductDto.html",[3,0.315,4,0.274,5,0.274,13,0.023,27,0.533,31,1.352,36,0.315,37,0.199,48,0.02,49,0.02,188,1.53,223,1.732,225,3.049,229,3.343,250,2.804,343,3.049,500,3.659,604,4.205,605,3.712,606,4.954]],["title/classes/UpdateUserDto.html",[37,0.139,607,2.127]],["body/classes/UpdateUserDto.html",[3,0.315,4,0.274,5,0.274,13,0.023,27,0.533,31,1.352,36,0.315,37,0.199,48,0.02,49,0.02,188,1.53,223,1.732,292,2.804,294,3.712,343,3.049,605,3.712,607,3.659,608,4.205,609,3.712,610,4.954]],["title/classes/User.html",[37,0.139,104,1.209]],["body/classes/User.html",[3,0.249,4,0.217,5,0.217,7,0.504,13,0.023,19,1.064,22,1.379,23,0.917,24,1.659,36,0.249,37,0.158,48,0.017,49,0.017,80,1.643,104,1.796,171,2.999,172,3.241,188,1.212,191,1.687,239,1.881,252,2.999,372,3.524,374,3.524,375,4.1,611,3.331,612,3.924,613,3.924,614,3.924,615,3.924,616,3.924,617,3.924,618,3.924]],["title/controllers/UserController.html",[0,1.209,619,2.333]],["body/controllers/UserController.html",[0,0.868,2,0.868,3,0.158,4,0.137,5,0.137,7,0.319,8,1.222,12,1.858,13,0.024,15,2.29,19,0.858,21,1.629,22,1.194,23,0.69,24,1.272,26,1.745,27,0.5,28,0.492,29,3.157,30,1.404,31,0.677,36,0.158,37,0.1,38,0.924,39,0.924,40,3.007,46,1.629,48,0.013,49,0.013,80,1.465,88,1.527,97,4.015,104,0.868,108,3.367,112,2.29,113,1.674,114,1.674,115,2.29,116,1.527,117,1.527,118,0.924,119,1.527,135,3.052,137,3.052,184,2.025,199,2.787,223,1.301,239,1.832,292,3.157,387,2.413,388,1.81,390,1.674,391,2.51,393,2.787,394,3.158,396,1.207,399,1.674,401,1.207,410,1.674,411,1.674,488,1.948,491,1.404,493,3.158,495,1.859,499,1.404,504,1.859,507,1.404,510,1.859,514,1.859,515,1.859,517,1.859,518,1.859,519,1.859,569,3.158,607,3.661,609,2.787,619,2.51,620,2.106,621,2.481,622,2.481,623,2.481,624,2.481,625,2.481,626,3.72,627,2.481,628,2.481,629,2.481,630,2.481,631,2.481,632,2.526,633,2.106,634,2.481,635,2.481,636,2.481,637,2.481,638,2.481,639,2.481,640,2.481]],["title/modules/UserModule.html",[50,1.136,62,2.127]],["body/modules/UserModule.html",[2,1.834,3,0.257,4,0.224,5,0.224,13,0.024,27,0.571,28,0.804,36,0.257,37,0.163,48,0.018,49,0.018,50,1.723,52,1.719,53,2.224,59,2.767,62,4.143,63,2.552,64,1.972,65,1.972,67,2.747,68,2.969,118,1.509,145,2.494,148,2.494,150,2.494,151,1.972,619,3.925,632,3.694,633,3.44,641,3.44,642,3.44,643,4.052,644,4.052,645,4.052]],["title/injectables/UserService.html",[76,0.943,632,1.956]],["body/injectables/UserService.html",[3,0.117,4,0.102,5,0.102,7,0.237,8,0.971,13,0.024,19,0.898,21,1.704,22,1.339,23,0.75,24,1.33,26,1.704,27,0.443,28,0.366,36,0.117,37,0.074,38,0.687,39,0.687,42,2.252,46,1.52,48,0.01,49,0.01,76,0.806,77,0.837,80,1.429,102,3.229,104,1.033,107,1.044,159,3.238,160,1.044,161,1.044,162,1.679,165,1.438,168,2.214,169,1.044,170,3.138,171,1.547,172,2.093,173,2.586,175,2.393,176,2.058,184,1.918,191,0.971,198,1.244,204,1.818,223,1.033,228,4.446,239,1.874,252,1.547,292,2.393,349,2.508,351,1.565,353,2.495,372,1.818,374,1.818,387,2.058,388,1.438,396,1.438,401,0.897,419,1.994,426,1.994,427,2.854,429,1.994,431,2.495,441,3.589,442,1.244,447,1.244,448,1.244,449,2.495,450,1.244,451,1.244,452,1.565,453,1.244,454,1.244,455,1.244,456,1.244,457,1.244,458,1.244,488,1.547,491,1.672,499,1.672,507,1.044,527,2.214,532,2.214,537,1.381,540,2.77,542,1.565,543,1.381,544,2.77,546,1.381,549,1.565,558,2.214,561,3.7,607,2.602,609,2.214,632,1.672,646,1.565,647,3.697,648,1.844,649,1.844,650,1.844,651,1.844,652,1.844,653,1.844,654,1.844,655,1.844,656,1.844,657,1.565,658,1.565,659,1.844,660,1.844,661,1.844,662,1.844,663,3.697,664,3.697,665,4.229,666,2.955,667,2.955,668,2.955,669,2.955,670,2.955,671,1.844,672,2.508,673,1.844,674,1.844,675,2.955,676,1.844,677,1.844,678,1.844]],["title/coverage.html",[679,3.535]],["body/coverage.html",[0,1.941,1,1.652,5,0.135,6,2.078,13,0.024,23,0.341,33,1.386,37,0.261,48,0.012,49,0.012,76,1.617,78,2.078,86,1.652,87,2.078,93,1.507,104,1.288,121,1.386,123,1.507,127,1.652,142,1.507,158,2.078,162,0.972,165,1.191,176,1.191,187,1.507,189,2.76,190,2.078,192,1.507,194,1.507,224,1.929,229,2.988,250,1.386,251,2.078,287,1.386,288,2.078,289,2.76,292,1.386,293,2.078,294,2.76,331,2.078,356,2.078,362,2.078,363,2.078,371,2.078,373,2.155,378,1.792,385,1.652,386,2.078,400,1.834,403,1.386,418,2.078,465,2.078,478,2.078,486,1.652,487,2.078,500,1.507,505,1.386,526,2.078,550,2.078,556,1.652,557,2.078,568,1.507,573,1.386,587,2.078,604,2.078,607,1.507,608,2.078,611,2.078,619,1.652,620,2.078,632,1.386,646,2.078,679,1.834,680,2.448,681,2.448,682,2.448,683,7.055,684,4.428,685,2.078,686,6.427,687,3.683,688,5.282,689,3.683,690,5.758,691,2.078,692,6.062,693,2.078,694,2.448,695,2.078,696,3.683,697,2.448,698,3.126,699,2.078,700,3.126,701,3.126,702,2.078,703,3.126,704,3.126,705,3.126,706,3.126,707,2.078,708,3.683,709,2.448,710,2.448]],["title/dependencies.html",[53,1.763,711,2.449]],["body/dependencies.html",[13,0.024,28,0.835,31,1.148,32,4.56,37,0.216,48,0.018,49,0.018,53,1.783,118,1.566,147,3.151,151,2.046,168,3.151,217,3.57,222,2.202,342,5.024,430,3.151,597,3.57,712,5.919,713,4.206,714,4.206,715,4.206,716,4.206,717,4.206,718,4.206,719,4.206,720,4.206,721,4.206,722,4.206,723,4.206,724,4.206,725,4.206,726,4.206,727,4.206,728,4.206,729,4.206,730,4.206,731,4.206,732,4.206,733,4.206,734,4.206,735,4.206,736,4.206,737,4.206]],["title/miscellaneous/functions.html",[738,1.947,739,3.529]],["body/miscellaneous/functions.html",[7,0.686,13,0.021,48,0.021,49,0.021,693,4.528,695,5.578,738,3.6,739,4.528,740,5.334]],["title/index.html",[7,0.371,741,2.886,742,2.886]],["body/index.html",[4,0.21,13,0.024,48,0.017,49,0.017,83,3.228,226,1.417,472,3.228,679,2.849,743,3.803,744,3.803,745,5.032,746,3.803,747,3.803,748,3.803,749,3.803,750,3.803,751,5.639,752,3.803,753,3.803,754,3.803,755,3.803,756,6.541,757,3.803,758,3.803,759,6.413,760,3.803,761,3.803,762,5.032,763,3.803,764,3.803,765,3.803,766,3.803,767,5.032,768,5.032,769,3.803,770,3.803,771,3.803,772,5.032,773,5.032,774,3.803,775,3.803,776,3.803,777,3.803,778,3.803,779,3.228,780,3.803,781,3.803,782,3.803,783,3.803,784,3.803,785,3.803,786,3.803,787,3.803,788,3.803,789,3.803,790,3.228,791,3.803,792,3.803,793,3.803,794,3.803,795,3.803,796,3.803,797,3.228]],["title/modules.html",[52,2.001]],["body/modules.html",[13,0.019,48,0.019,49,0.019,51,3.174,52,1.994,57,2.895,58,2.895,59,1.994,60,2.895,61,2.895,62,2.895,779,5.826,798,6.864,799,6.864,800,6.864]],["title/overview.html",[801,4.005]],["body/overview.html",[2,1.133,13,0.024,33,2.939,48,0.015,49,0.015,51,4.641,52,1.373,53,1.913,54,2.749,55,2.749,56,2.749,57,3.999,58,3.861,59,2.82,60,3.861,61,3.861,62,3.861,63,2.195,64,1.576,65,1.576,77,1.469,121,2.939,139,2.749,141,2.749,142,3.195,162,2.491,188,1,403,2.939,413,2.749,414,2.749,459,2.749,460,2.749,461,2.749,505,2.939,521,2.749,523,2.749,573,2.939,582,2.749,583,2.749,632,2.939,641,2.749,642,2.749,801,2.749,802,3.239,803,3.239,804,3.239,805,3.239]],["title/properties.html",[191,1.366,711,2.449]],["body/properties.html",[13,0.024,48,0.021,49,0.021,191,1.728,226,1.959,790,4.464,797,4.464,806,5.259,807,5.259,808,5.259]],["title/classes/updateTableDto.html",[37,0.139,568,2.127]],["body/classes/updateTableDto.html",[3,0.313,4,0.273,5,0.273,13,0.024,27,0.532,31,1.346,36,0.313,37,0.198,48,0.02,49,0.02,188,1.523,223,1.725,287,2.792,289,3.695,343,3.036,568,3.65,571,3.695,605,3.695,685,4.187,809,4.932]],["title/miscellaneous/variables.html",[738,1.947,810,3.529]],["body/miscellaneous/variables.html",[7,0.328,11,2.169,13,0.024,22,1.094,23,0.632,42,2.617,46,0.839,48,0.013,49,0.013,99,1.572,104,1.759,127,2.566,159,2.379,165,2.617,171,1.991,172,2.152,173,2.635,176,1.243,183,1.914,184,1.159,192,2.34,206,2.448,214,1.724,223,1.588,226,0.952,252,1.991,253,1.724,255,2.169,256,3.228,257,3.228,258,2.169,259,2.169,260,2.169,261,2.169,262,2.169,266,2.169,267,2.169,268,4.271,269,2.169,270,2.169,271,2.169,272,2.169,273,2.169,274,2.169,275,2.169,281,2.169,286,2.169,301,1.914,304,2.169,305,2.169,306,2.169,307,2.169,313,2.169,317,2.169,373,1.85,378,1.85,400,1.914,466,4.271,488,2.379,657,5.205,658,5.205,672,2.169,691,3.228,698,2.169,699,3.228,700,2.169,701,3.855,702,3.228,703,2.169,704,3.855,705,2.169,706,3.855,707,3.228,738,1.724,810,2.169,811,2.555,812,3.803,813,3.803,814,3.803,815,3.803,816,2.555,817,2.555,818,2.555,819,2.555,820,2.555,821,2.555,822,5.639,823,2.555,824,2.555,825,2.555,826,2.555,827,2.555,828,2.555,829,2.555,830,2.555,831,2.555,832,2.555,833,2.555,834,2.555,835,2.555,836,2.555]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/updateTableDto.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":807,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":672,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["12.34",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":805,"title":{},"body":{"overview.html":{}}}],["1]?.trim",{"_index":451,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["2",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["24h",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["4315",{"_index":242,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.0.1",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["5b2f9b01cda4d7.2161941415298465298423.jpg",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":803,"title":{},"body":{"overview.html":{}}}],["7",{"_index":802,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["7aab7e8d8366",{"_index":244,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["8",{"_index":804,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["8d3fb6fd",{"_index":240,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["_count",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{}}}],["abc@1347",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["algum",{"_index":453,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["amazing",{"_index":780,"title":{},"body":{"index.html":{}}}],["ao",{"_index":456,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["apenas",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apibearerauth('jwt",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":575,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('users",{"_index":634,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":472,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":477,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":750,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":33,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["autenticado",{"_index":369,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["autentificado",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["autentificação",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":57,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":790,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":121,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["b295",{"_index":243,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["backers",{"_index":781,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":261,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":800,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":798,"title":{},"body":{"modules.html":{}}}],["building",{"_index":746,"title":{},"body":{"index.html":{}}}],["california",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["catch(this.handleerror",{"_index":442,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["cced",{"_index":241,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["cebola",{"_index":236,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["class",{"_index":37,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/updateTableDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"classes/updateTableDto.html":{}}}],["classes",{"_index":188,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{},"classes/updateTableDto.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":413,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":415,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":414,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":459,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":460,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":461,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":521,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":522,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":523,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":582,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":584,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":583,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":641,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":643,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":642,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["confirmação",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{}}}],["console.error(error",{"_index":452,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["const",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":509,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":576,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":635,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":679,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/updateTableDto.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":510,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":489,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["create(createuserdto",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":558,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":421,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":372,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":187,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto.tablenumber",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":194,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":250,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":287,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"classes/updateTableDto.html":{}}}],["createuserdto",{"_index":292,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criar",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":368,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":375,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["de",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":657,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletar",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":517,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth('jwt')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":519,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":254,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["deve",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":758,"title":{},"body":{"index.html":{}}}],["docs",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["dos",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":561,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":507,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":260,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["e/ou",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":769,"title":{},"body":{"index.html":{}}}],["each",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["editar",{"_index":569,"title":{},"body":{"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["efficient",{"_index":747,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":467,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":469,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":543,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["entities/product.entity",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entities",{"_index":572,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["erro",{"_index":454,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.message?.split('\\n",{"_index":448,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["errorlines",{"_index":447,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["errorlines[errorlines.length",{"_index":450,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["est",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["example",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executar",{"_index":457,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["executioncontext",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["exp1.licdn.com/dms/image/d4d35aqfuvcwu0jcwpq/profile",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/updateTableDto.html":{}}}],["exports",{"_index":463,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/updateTableDto.html":{}}}],["extractjwt",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/updateTableDto.html":{}}}],["fina",{"_index":259,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":387,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":388,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fino",{"_index":257,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["focac",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["fraca",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framedphoto",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":745,"title":{},"body":{"index.html":{}}}],["function",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":739,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerado",{"_index":364,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth('jwt')@apioperation({summary",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["get()@useguards(undefined)@apibearerauth('jwt')@apioperation({summary",{"_index":625,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":741,"title":{"index.html":{}},"body":{}}],["grow",{"_index":776,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":419,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["handleerror(error",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["here",{"_index":787,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":518,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://img1.gratispng.com/20180624/tzi/kisspng",{"_index":266,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["https://media",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":794,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":239,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":252,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":265,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["implements",{"_index":474,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/updateTableDto.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":446,"title":{},"body":{"injectables/OrderService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":470,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/updateTableDto.html":{}}}],["informadas",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":755,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":757,"title":{},"body":{"index.html":{}}}],["inválidos",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":361,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":290,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispositive",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":232,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":357,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":264,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":238,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["itens",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["join",{"_index":783,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategey",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":142,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":791,"title":{},"body":{"index.html":{}}}],["lasterrorline",{"_index":449,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["license",{"_index":797,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":773,"title":{},"body":{"index.html":{}}}],["lista",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["localizado",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logged",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["login(@body",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":93,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":123,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["massa",{"_index":258,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["matches",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/updateTableDto.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["mesa",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":565,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":738,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":772,"title":{},"body":{"index.html":{}}}],["mode",{"_index":762,"title":{},"body":{"index.html":{}}}],["modificar",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{}}}],["module",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth('jwt",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":786,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{}}}],["muito",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":256,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":792,"title":{},"body":{"index.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":751,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":796,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{},"classes/updateTableDto.html":{}}}],["new",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["node.js",{"_index":744,"title":{},"body":{"index.html":{}}}],["nome",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notfounderror",{"_index":596,"title":{},"body":{"injectables/TableService.html":{}}}],["notfoundexception",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(\"registro",{"_index":542,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":600,"title":{},"body":{"injectables/TableService.html":{}}}],["npm",{"_index":756,"title":{},"body":{"index.html":{}}}],["number",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["não",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observações",{"_index":233,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["ocorreu",{"_index":455,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":468,"title":{},"body":{"injectables/PrismaService.html":{}}}],["opcional",{"_index":555,"title":{},"body":{"classes/Table.html":{}}}],["open",{"_index":774,"title":{},"body":{"index.html":{}}}],["operação",{"_index":458,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":224,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["order.controller",{"_index":417,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":190,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":385,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":58,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":403,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["os",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":801,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":711,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partial",{"_index":546,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":605,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/updateTableDto.html":{}}}],["partialtype(createproductdto",{"_index":606,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":809,"title":{},"body":{"classes/updateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":610,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":514,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth('jwt')@apioperation({summary",{"_index":630,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedro",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["pedrotaxp",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["pedrotaxp65",{"_index":358,"title":{},"body":{"classes/LoginDto.html":{}}}],["pelo",{"_index":365,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["perfil",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["pizza",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":784,"title":{},"body":{"index.html":{}}}],["post",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["preço",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":253,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":464,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":466,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":59,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":162,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":378,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":525,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":229,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":263,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:25",{"_index":237,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:26",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:33",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/product.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":486,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":230,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":764,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":60,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":192,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":505,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":234,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["profile",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":743,"title":{},"body":{"index.html":{}}}],["project",{"_index":775,"title":{},"body":{"index.html":{}}}],["promise",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":191,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["quantidade",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":231,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":255,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":785,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["recheada",{"_index":262,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["remover",{"_index":562,"title":{},"body":{"controllers/TableController.html":{}}}],["repository",{"_index":754,"title":{},"body":{"index.html":{}}}],["req",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":363,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":370,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":367,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/updateTableDto.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":759,"title":{},"body":{"index.html":{}}}],["running",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":597,"title":{},"body":{"injectables/TableService.html":{},"dependencies.html":{}}}],["salami",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["sauce",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":748,"title":{},"body":{"index.html":{}}}],["secret",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeds",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":235,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["senha",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["ser",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["shrink_400_400/0/1650406705402?e=1653973200&v=beta&t=a3jbqdpbluq9wp05p0hkdimmvkmw93c1988zrzr07za",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["sicilian",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":749,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"classes/updateTableDto.html":{}}}],["sponsors",{"_index":778,"title":{},"body":{"index.html":{}}}],["src/.../01",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":362,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":356,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":359,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":360,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategey.ts",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategey.ts:16",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategey.ts:7",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":189,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":371,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":381,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":379,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":377,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":382,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":380,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":376,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":386,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":416,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":418,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":422,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:118",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:64",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":420,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:87",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":462,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":465,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":471,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":473,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":251,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":604,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":383,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":478,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":481,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":483,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":480,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":484,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":482,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":479,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":485,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:19",{"_index":490,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:27",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:35",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:43",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":524,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:11",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:15",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:24",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:28",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:34",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:45",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:53",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:8",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":288,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":685,"title":{},"body":{"coverage.html":{},"classes/updateTableDto.html":{}}}],["src/table/entities/table.entities",{"_index":384,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entities.ts",{"_index":550,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entities.ts:2",{"_index":552,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entities.ts:3",{"_index":553,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entities.ts:4",{"_index":551,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entities.ts:5",{"_index":554,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":557,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:20",{"_index":566,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:28",{"_index":567,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:36",{"_index":560,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:44",{"_index":570,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:53",{"_index":563,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":585,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":587,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:13",{"_index":588,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:16",{"_index":591,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:20",{"_index":592,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:30",{"_index":593,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:34",{"_index":589,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:40",{"_index":595,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:51",{"_index":590,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:61",{"_index":594,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":608,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":611,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":613,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":616,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":615,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":617,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":614,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":612,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":618,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":620,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":631,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":624,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":644,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":646,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:28",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:40",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:44",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:59",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:83",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:91",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":760,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":763,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":765,"title":{},"body":{"index.html":{}}}],["started",{"_index":742,"title":{"index.html":{}},"body":{}}],["starter",{"_index":753,"title":{},"body":{"index.html":{}}}],["statements",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":788,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["style",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":779,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":799,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["são",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":373,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":586,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":571,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/updateTableDto.html":{}}}],["table.dto.ts",{"_index":289,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{},"classes/updateTableDto.html":{}}}],["table.dto.ts:11",{"_index":291,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":574,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/table.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":556,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":61,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":193,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableservice",{"_index":573,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":768,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":771,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":770,"title":{},"body":{"index.html":{}}}],["tests",{"_index":767,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":777,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":475,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":476,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":544,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":445,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product.create({data}).catch(this.handleerror",{"_index":545,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":548,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique({where",{"_index":541,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.update",{"_index":547,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":603,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.create",{"_index":601,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":598,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":599,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.update",{"_index":602,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user.create({data",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.findunique({where",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.update",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":511,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":520,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":512,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":513,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":516,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":579,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":581,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":577,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":578,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":580,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userselect}).catch(this.handleerror",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":640,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":639,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["todas",{"_index":564,"title":{},"body":{"controllers/TableController.html":{}}}],["todos",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["toke",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["token",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":366,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["touch",{"_index":789,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":196,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":795,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":752,"title":{},"body":{"index.html":{}}}],["ui",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":559,"title":{},"body":{"controllers/TableController.html":{}}}],["unauthorizedexception",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":766,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":808,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["update",{"_index":488,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":515,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":374,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":500,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":568,"title":{"classes/updateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"classes/updateTableDto.html":{}}}],["updateuserdto",{"_index":607,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useguards",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":104,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":645,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":609,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":633,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":619,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":62,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":632,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["usúario",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validate",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":195,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":658,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":810,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdadeiro",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["version",{"_index":806,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":761,"title":{},"body":{"index.html":{}}}],["website",{"_index":793,"title":{},"body":{"index.html":{}}}],["where:{id",{"_index":549,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["wine",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":782,"title":{},"body":{"index.html":{}}}],["z",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host')\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './Table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running!',\n      docs: baseUrl + '/api',\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um toke de autentificação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autentificado no momento'})@ApiBearerAuth('JWT')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um toke de autentificação'\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autentificado no momento',\n  })\n  @ApiBearerAuth('JWT')\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategey';\n\n@Module({\n  imports: [PrismaModule,\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.register({\n    secret: process.env.JWT_SECRET,\n    signOptions: { expiresIn: '24h'},\n  })],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const {nickname, password} = loginDto\n\n    const user = await this.prisma.user.findUnique({where: {nickname}});\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos!')\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos!')\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os Ids dos produtos no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Número da mesa que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from \"class-validator\";\nimport { CreateOrderProductDto } from \"./create-order-product.dto\";\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número da mesa que está realizando o pedido',\n    example: 1\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com os Ids dos produtos no pedido',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Id do produto', example: '8d3fb6fd-cced-4315-b295-7aab7e8d8366'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsPositive, IsString, IsUUID } from \"class-validator\";\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'Id do produto',\n    example: '8d3fb6fd-cced-4315-b295-7aab7e8d8366'\n  })\n  productId: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Sem cebola'\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do produto', example: 'Queijo mussarela fino do fino, massa fina e borda recheada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://img1.gratispng.com/20180624/tzi/kisspng-sicilian-pizza-salami-california-style-pizza-focac-sauce-pizza-wine-5b2f9b01cda4d7.2161941415298465298423.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: 12.34})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsString, IsUrl } from \"class-validator\";\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do produto',\n    example: 'Queijo mussarela fino do fino, massa fina e borda recheada',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 12.34,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://img1.gratispng.com/20180624/tzi/kisspng-sicilian-pizza-salami-california-style-pizza-focac-sauce-pizza-wine-5b2f9b01cda4d7.2161941415298465298423.jpg',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'O número da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNumber, IsPositive } from \"class-validator\";\n\nexport class CreateTableDto {\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'O número da mesa',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha de login', example: 'Abc@1347'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://media-exp1.licdn.com/dms/image/D4D35AQFuvCwU0JCwPQ/profile-framedphoto-shrink_400_400/0/1650406705402?e=1653973200&v=beta&t=A3JBQDpblUQ9wP05p0HkdIMmVkmW93C1988Zrzr07zA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome verdadeiro. Apenas para exibição', example: 'Pedro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usúario. Deve ser único', example: 'pedrotaxp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abc@1347'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsUrl, Matches, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usúario. Deve ser único',\n    example: 'pedrotaxp'\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome verdadeiro. Apenas para exibição',\n    example: 'Pedro'\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abc@1347',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha de login',\n    example: 'Abc@1347',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://media-exp1.licdn.com/dms/image/D4D35AQFuvCwU0JCwPQ/profile-framedphoto-shrink_400_400/0/1650406705402?e=1653973200&v=beta&t=A3JBQDpblUQ9wP05p0HkdIMmVkmW93C1988Zrzr07zA'\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategey.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategey.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategey.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não localizado ou não autentificado',\n      );\n    }\n\n    delete user.password\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'pedrotaxp65'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abc@1347'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'pedrotaxp65'\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abc@1347',\n  })\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo ID', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\"\nimport { User } from \"src/user/entities/user.entity\"\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo ID',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE'\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from \"src/product/entities/product.entity\";\nimport { Table } from \"src/Table/entities/table.entities\";\nimport { User } from \"src/user/entities/user.entity\";\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth('JWT')\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido'\n  })\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedido'\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido'\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [OrderController],\n  providers: [OrderService]\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnprocessableEntityException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateOrderProductDto } from './dto/create-order-product.dto';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(userId: string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      table: {\n        connect: {\n          number: createOrderDto.tableNumber,\n        },\n      },\n      products: {\n        createMany: {\n          data: createOrderDto.products.map((CreateOrderProductDto) => ({\n            productId: CreateOrderProductDto.productId,\n            quantity: CreateOrderProductDto.quantity,\n            description: CreateOrderProductDto.description,\n          })),\n        },\n      },\n    };\n    return this.prisma.order\n      .create({\n        data,\n        select: {\n          id: true,\n          table: {\n            select: {\n              number: true,\n            },\n          },\n          user: {\n            select: {\n              name: true,\n            },\n          },\n          products: {\n            select: {\n              quantity: true,\n              description: true,\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(this.handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          }\n        }\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: {id},\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                id: true,\n                name: true,\n                price: true,\n                image: true,\n                description: true,\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n\n    if (!lastErrorLine) {\n      console.error(error);\n    }\n\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Algum erro ocorreu ao executar a operação',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, INestApplication, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um produto pelo Id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Mostrar produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar produto pelo Id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'modificar um produto pelo Id'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth('JWT')\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto'\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Mostrar produtos'\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar produto pelo Id'\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'modificar um produto pelo Id'\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletar um produto pelo Id'\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [ProductController],\n  providers: [ProductService]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({where: {id}});\n\n    if (!record) {\n      throw new NotFoundException(\"Registro com o Id '${id}' não encontrado.\");\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(createProductDto: CreateProductDto): Promise {\n    const data: Product = { ...createProductDto }\n\n    return this.prisma.product.create({data}).catch(this.handleError);\n  }\n\n  async update(id: string, updateProductDto: UpdateProductDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = {...updateProductDto};\n\n    return this.prisma.product.update({\n      where: {id},\n      data\n    });\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.product.delete({\n      where:{id},\n    }).catch(this.handleError)\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Algum erro ocorreu ao executar a operação',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Table/entities/table.entities.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Table/entities/table.entities.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Table/entities/table.entities.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Table/entities/table.entities.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Table/entities/table.entities.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string; // ? = opcional\n  number: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/Table/table.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover uma mesa pelo Id'})\n                \n            \n\n            \n                \n                    Defined in src/Table/table.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/Table/table.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/Table/table.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: updateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar mesa pelo Id'})\n                \n            \n\n            \n                \n                    Defined in src/Table/table.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                updateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, Param, Patch, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { updateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entities';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth('JWT')\n@Controller('table')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as mesas',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma mesa',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar uma mesa',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar mesa pelo Id',\n  })\n  update(@Param('id') id: string, @Body() dto: updateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover uma mesa pelo Id',\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_TableModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Table/table.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: updateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Table/table.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                updateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { NotFoundError } from 'rxjs';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { updateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entities';\n\n@Injectable({})\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o Id '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(this.handleError);\n  }\n\n  async update(id: string, dto: updateTableDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.table.update({\n      where: { id },\n      data,\n    });\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.table\n      .delete({\n        where: { id },\n      })\n      .catch(this.handleError);\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Algum erro ocorreu ao executar a operação',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth('JWT')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth('JWT')@ApiOperation({summary: 'Listar todos os usuários'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth('JWT')@ApiOperation({summary: 'Visualizar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth('JWT')@ApiOperation({summary: 'Editar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('users')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth('JWT')\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth('JWT')\n  @ApiOperation({\n    summary: 'Visualizar um usuário',\n  })\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth('JWT')\n  @ApiOperation({\n    summary: 'Editar um usuário',\n  })\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth('JWT')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletar um usuário',\n  })\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                handleError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(Dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, Dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: {id},\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(\"Registro com o Id '${id}' não encontrado.\");\n    }\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(Dto: CreateUserDto): Promise {\n    if (Dto.password != Dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete Dto.confirmPassword;\n\n    const data: User = {\n      ...Dto,\n      password: await bcrypt.hash(Dto.password, 10),\n     }\n\n    return this.prisma.user.create({data, select: this.userSelect}).catch(this.handleError);\n  }\n\n  async update(id: string, Dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (Dto.password) {\n      if (Dto.password != Dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete Dto.confirmPassword;\n\n    const data: Partial = {...Dto};\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10)\n    }\n\n    return this.prisma.user.update({\n      where: {id},\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.user.delete({\n      where:{id},\n    }).catch(this.handleError)\n  }\n\n  handleError(error: Error): undefined {\n    const errorLines = error.message?.split('\\n');\n    const lastErrorLine = errorLines[errorLines.length - 1]?.trim();\n\n    if (!lastErrorLine) {\n      console.error(error);\n    }\n\n    throw new UnprocessableEntityException(\n      lastErrorLine || 'Algum erro ocorreu ao executar a operação',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Table/dto/update-table.dto.ts\n            \n            class\n            updateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Table/entities/table.entities.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategey.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            Table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            Tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.14.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/updateTableDto.html":{"url":"classes/updateTableDto.html","title":"class - updateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  updateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateTableDto } from \"./create-table.dto\";\n\nexport class updateTableDto extends PartialType(CreateTableDto) {\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            Table   (src/.../03-table.ts)\n                        \n                        \n                            Tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(products)) {\n    await prisma.product.upsert({\n      where: {name: obj.name},\n      update: {},\n      create: {\n        ...obj,\n      }\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Pizza de Mussarela',\n    description: 'Queijo mussarela fino do fino, massa fina e borda recheada',\n    price: 12.34,\n    image: 'https://img1.gratispng.com/20180624/tzi/kisspng-sicilian-pizza-salami-california-style-pizza-focac-sauce-pizza-wine-5b2f9b01cda4d7.2161941415298465298423.jpg',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(Tables)) {\n    await prisma.table.upsert({\n      where: {number: obj.number},\n      update: {},\n      create: {\n        ...obj\n      }\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    number: 1,\n  },\n  {\n    number: 2,\n  },\n  {\n    number: 3,\n  }\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: {nickname: obj.nickname},\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10),\n      }\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    nickname: 'pedrotaxp',\n    name: 'Pedro',\n    password: 'Abc@1347',\n    image:\n      'https://media-exp1.licdn.com/dms/image/D4D35AQFuvCwU0JCwPQ/profile-framedphoto-shrink_400_400/0/1650406705402?e=1653973200&v=beta&t=A3JBQDpblUQ9wP05p0HkdIMmVkmW93C1988Zrzr07zA',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
